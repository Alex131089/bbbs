#!/usr/bin/env bash

# You can place this file in /root/bin/
# It will launch borg for you with the right user

borg_path=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
borg_user=borg

# Because distributions like OMV can decide to switch LANG to C before launching crons, which makes Python read
# FS filenames as ANSI, which generate decode errors for non ANSI strings; for more informations about this awful mess:
# - https://stackoverflow.com/questions/27366479/python-3-os-walk-file-paths-unicodeencodeerror-utf-8-codec-cant-encode-s
# - https://unix.stackexchange.com/questions/2089/what-charset-encoding-is-used-for-filenames-and-paths-on-linux (because there's no standard in the first place)
# - https://bugs.python.org/issue13717
# - https://bugs.python.org/issue19846
# - https://bugs.python.org/issue19847
# - https://docs.python.org/3/howto/unicode.html#unicode-filenames (about fallback)
# Of courne, no unification here either: debian have it's own custom C.UTF-8 by default while centos seems to enable many locales by default ..
# https://gist.github.com/Alex131089/8b4a7e346c040b09c5b8ac99951fda29
# borg seems to handle that correctly though, it seems to be only required to extract / fuse mount
lcutf8=0 # utf8 locale is not set
higher_level=''
higher_value=''
for env in LANGUAGE LC_ALL LC_CTYPE LANG; do # LANGUAGE > LC_ALL > LC_CTYPE > LANG
	if [ -n "${!env:+x}" ]; then # Is defined & not null
		[ -z "$higher_level" ] && higher_level="$env" && higher_value="${!env}" # Keep the first locale found
		if (echo "${!env}" | grep -iE '\.utf-?8'); then # Is utf-8
				lcutf8=1
				break
		else
			export -n "$env" # Unset higher priority non utf-8
		fi
	fi
done
if [ $lcutf8 -eq 0 ]; then # No utf8 locale found and all non-utf8 locales unset
	unilocales=$(locale -a | grep -iE '\.utf-?8') # So look for an UTF-8 locale
	if [ -n "$unilocales" ]; then
		if [ -n "$higher_level" ]; then # Try to find the utf8 variant of the highest locale found
			higher_value=$(echo "$higher_value" | cut -d':' -f1 | cut -d'.' -f1 | cut -d'@' -f1)
			found=$(echo "$unilocales" | grep -im1 "^${higher_value}.")
			[ -n "$found" ] && export "${higher_level}=${found}" && lcutf8=2
		fi
		if [ $lcutf8 -eq 0 ]; then # Still not found ? Last try .. C, then English, then any available
			for try in '^C\.' '^en_GB\.' '^en_US\.' '^en_' ''; do
				found=$(echo "$unilocales" | grep -im1 "$try")
				if [ -n "$found" ]; then
					export LC_CTYPE="$found"
					lcutf8=3
					break
				fi
			done
		fi
	fi
fi
unset -v unilocales

if [ "$(id --user --name)" != "$borg_user" ]; then # logname / whoami
	echo "Executing as $borg_user"
	exec sudo -u $borg_user $borg_path/borg.bin "$@"
else
	exec $borg_path/borg.bin "$@"
fi
